blueprint:
  name: Défis Hilo - Automatisation des defis
  description: Gestion des défis Hilo en une automatisation
  domain: automation

  input:
    default_challenge_entity:
      name: Entité de Défi de Hilo par default
      selector:
        entity:
          domain: sensor

    do_pre_heat:
      name: Activer le pré-chauffage
      description: Pré-chauffer avant la réduction (équivalent au pré-chauffage de l'appli Hilo)
      default: true
      selector:
        boolean:

    challenge_am:
      name: Défi AM
      description: Va participer aux défis AM (incluant la référence)
      default: true
      selector:
        boolean:

    challenge_pm:
      name: Défi PM
      description: Va participer aux défis PM (incluant la référence)
      default: true
      selector:
        boolean:

    thermostats:
      name: Thermostats
      selector:
        entity:
          domain: climate
          multiple: true

    water_heater:
      name: Chauffe-eau (optionnel)
      description: Désactive le chauffe-eau durant les défis et les phases d'appréciation de référence
      default: null
      selector:
        entity:
          domain: switch
          multiple: true

    other_devices_switch:
      name: Autres équipements types SWITCH (optionnel)
      description: Désactive d'autres équipements SWITCH durant les défis et/ou les phases d'appréciation de référence
      default: null
      selector:
        entity:
          domain: switch
          multiple: true
          
    other_devices_light:
      name: Autres équipements types LIGHT (optionnel)
      description: Désactive d'autres équipements LIGHT durant les défis et/ou les phases d'appréciation de référence (ATTENTION LES LUMIERES SE RALLUMERONT APRES LES DEFIS)
      default: null
      selector:
        entity:
          domain: light
          multiple: true


    bool_ref_water_heater:
      name: Chauffe eau - Défis seulement ou Refroidissment et Défis
      description: Désactive le chauffe eaux durant les défis seulement (False) ou désactiver durant la phase de refroidissement, puis réactivation durant la phase d'appréciation avec de désactiver pour les défis (True)
      default: false
      selector:
        boolean:

    bool_ref_other_switch:
      name: Autres Équipements - Défis seulement ou Refroidissment et Défis
      description: Désactive les autres équipements durant les défis seulement (False) ou désactiver durant la phase de refroidissement, puis réactivation durant la phase d'appréciation avec de désactiver pour les défis (True)
      default: false
      selector:
        boolean:
    
    bool_ref_other_light:
      name: Autres Équipements - Défis seulement ou Refroidissment et Défis
      description: Désactive les autres équipements durant les défis seulement (False) ou désactiver durant la phase de refroidissement, puis réactivation durant la phase d'appréciation avec de désactiver pour les défis (True)
      default: false
      selector:
        boolean:

    normal_temp:
      name: Température normale
      description: Température pour les moments sans défis (ni référence, ni appréciation)
      default: 21
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    reference_temp:
      name: Température de référence
      description: Température pour les phases de références (plus haute que la normale) (faible impact sur les récompenses)
      default: 22
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    cooling_temp:
      name: Température de refroidissement
      description: Température pour les phases de refroidissement avant appréciation (si activé)
      default: 20
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    appreciation_reference_temp:
      name: Température de la référence d'appréciation
      description: Température pour les phases d'appréciation de référence (plus basse que normale) (impact modéré sur les récompenses)
      default: 20
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    appreciation_temp:
      name: Température de l'appréciation
      description: Température pour les phases d'appréciation (plus haute que normale) (impact important sur les récompenses)
      default: 23
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    preheat_temp:
      name: Température de pré-chauffage
      description: Température durant la phase de pré-chauffage (aucun impact sur les récompenses)
      default: 23
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    challenge_temp:
      name: Température de défi
      description: Température lors des défis (le plus bas possible)
      default: 17
      selector:
        number:
          step: 0.5
          min: 15
          max: 25
          unit_of_measurement: °C

    bool_challenge_temp:
      name: Eteindre les thermostats durant défis
      description: Désactive les thermostats durant la phase de réducition au lieu de réduire la température (True)
      default: false
      selector:
        boolean:

triggers:
  - trigger: time_pattern
    hours: "*"
    minutes: "0"
    seconds: "30"
  - trigger: state
    entity_id: !input default_challenge_entity
    to: 
      - "pre_cold"
      - "appreciation"
      - "pre_heat"
      - "reduction"
      - "recovery"

variables:
  do_pre_heat: !input do_pre_heat
  water_heater: !input water_heater
  other_devices_switch: !input other_devices_switch
  other_devices_light: !input other_devices_light
  bool_ref_water_heater: !input bool_ref_water_heater
  bool_ref_other_switch: !input bool_ref_other_switch
  bool_ref_other_light: !input bool_ref_other_light
  challenge_am: !input challenge_am
  challenge_pm: !input challenge_pm
  bool_challenge_temp: !input bool_challenge_temp

action:
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ challenge_pm }}"
                  - condition: time
                    after: "11:55:00"
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ challenge_am }}"
                  - condition: time
                    before: "11:55:00"

        sequence:
          - choose:
              - conditions:
                  - condition: or
                    conditions:
                      - condition: time
                        after: "01:00:00"
                        before: "04:00:00"
                      - condition: time
                        after: "12:00:00"
                        before: "15:00:00"
                sequence:
                  - choose:
                      #Condition d'APPRECIATION ou de REF-APPRECIATION#
                      - conditions:
                          - condition: state
                            entity_id: !input default_challenge_entity
                            state: "appreciation"
                        sequence:
                          - service: climate.set_temperature
                            data:
                              temperature: !input appreciation_temp
                            target:
                              entity_id: !input thermostats
                          - choose:
                              - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                                sequence:
                                  - service: switch.turn_on
                                    target:
                                      entity_id: !input water_heater
                          - choose:
                              - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                                sequence:
                                  - service: switch.turn_on
                                    target:
                                      entity_id: !input other_devices_switch
                          - choose:
                              - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                                sequence:
                                  - service: light.turn_on
                                    target:
                                      entity_id: !input other_devices_light
                    default:
                      - service: climate.set_temperature
                        data:
                          temperature: !input appreciation_reference_temp
                        target:
                          entity_id: !input thermostats
                      - choose:
                          - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                            sequence:
                              - service: switch.turn_on
                                target:
                                  entity_id: !input water_heater
                      - choose:
                          - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                            sequence:
                              - service: switch.turn_on
                                target:
                                  entity_id: !input other_devices_switch
                      - choose:
                          - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                            sequence:
                              - service: light.turn_on
                                target:
                                  entity_id: !input other_devices_light

              #Condition de PRE-COLD si active dans l'integration Hilo#
              - conditions:
                  - condition: state
                    entity_id: !input default_challenge_entity
                    state: "pre_cold"
                sequence:
                  - service: climate.set_temperature
                    data:
                      temperature: !input cooling_temp
                    target:
                      entity_id: !input thermostats
                  - choose:
                      - conditions:
                          - "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                          - "{{ bool_ref_water_heater | bool }}"
                        sequence:
                          - service: switch.turn_off
                            target:
                              entity_id: !input water_heater
                  - choose:
                      - conditions:
                          - "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                          - "{{ bool_ref_other_switch | bool }}"
                        sequence:
                          - service: switch.turn_off
                            target:
                              entity_id: !input other_devices_switch
                  - choose:
                      - conditions:
                          - "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                          - "{{ bool_ref_other_light | bool }}"
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: !input other_devices_light

              # Condition de REF-REDUCTION ou REDUCTION (DEFI)#
              - conditions:
                  - condition: or
                    conditions:
                      - condition: time
                        after: "06:00:00"
                        before: "10:00:00"
                      - condition: time
                        after: "17:00:00"
                        before: "21:00:00"
                sequence:
                  - choose:
                      - conditions:
                          - condition: or
                            conditions:
                              - condition: state
                                entity_id: !input default_challenge_entity
                                state: "reduction"
                              - condition: state
                                entity_id: !input default_challenge_entity
                                state: "on"
                        sequence:
                          - service: climate.set_temperature
                            data:
                              temperature: !input challenge_temp
                            target:
                              entity_id: !input thermostats
                          - choose:
                              - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                                sequence:
                                  - service: switch.turn_off
                                    target:
                                      entity_id: !input water_heater
                          - choose:
                              - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                                sequence:
                                  - service: switch.turn_off
                                    target:
                                      entity_id: !input other_devices_switch
                          - choose:
                              - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                                sequence:
                                  - service: light.turn_off
                                    target:
                                      entity_id: !input other_devices_light

                    default:
                      - service: climate.set_temperature
                        data:
                          temperature: !input reference_temp
                        target:
                          entity_id: !input thermostats
                      - choose:
                          - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                            sequence:
                              - service: switch.turn_on
                                target:
                                  entity_id: !input water_heater
                      - choose:
                          - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                            sequence:
                              - service: switch.turn_on
                                target:
                                  entity_id: !input other_devices_switch
                      - choose:
                          - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                            sequence:
                              - service: light.turn_on
                                target:
                                  entity_id: !input other_devices_light

              #Condition de PRE-HEAT si active#
              - conditions:
                  - condition: or
                    conditions:
                      - condition: time
                        after: "04:00:00"
                        before: "06:00:00"
                      - condition: time
                        after: "15:00:00"
                        before: "17:00:00"
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: !input default_challenge_entity
                            state: "pre_heat"
                          - condition: template
                            value_template: "{{ do_pre_heat | bool }}"
                        sequence:
                          - service: climate.set_temperature
                            data:
                              temperature: !input preheat_temp
                            target:
                              entity_id: !input thermostats
                          - choose:
                              - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                                sequence:
                                  - service: switch.turn_on
                                    target:
                                      entity_id: !input water_heater
                          - choose:
                              - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                                sequence:
                                  - service: switch.turn_on
                                    target:
                                      entity_id: !input other_devices_switch
                          - choose:
                              - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                                sequence:
                                  - service: light.turn_on
                                    target:
                                      entity_id: !input other_devices_light
                    default:
                      - service: climate.set_temperature
                        data:
                          temperature: !input normal_temp
                        target:
                          entity_id: !input thermostats
                      - choose:
                          - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                            sequence:
                              - service: switch.turn_on
                                target:
                                  entity_id: !input water_heater
                      - choose:
                          - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                            sequence:
                              - service: switch.turn_on
                                target:
                                  entity_id: !input other_devices_switch
                      - choose:
                          - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                            sequence:
                              - service: light.turn_on
                                target:
                                  entity_id: !input other_devices_light

            default:
              - service: climate.set_temperature
                data:
                  temperature: !input normal_temp
                target:
                  entity_id: !input thermostats
              - choose:
                  - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
                    sequence:
                      - service: switch.turn_on
                        target:
                          entity_id: !input water_heater
              - choose:
                  - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
                    sequence:
                      - service: switch.turn_on
                        target:
                          entity_id: !input other_devices_switch
              - choose:
                  - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: !input other_devices_light

    default:
      - service: climate.set_temperature
        data:
          temperature: !input normal_temp
        target:
          entity_id: !input thermostats
      - choose:
          - conditions: "{{ water_heater is not none and water_heater | length > 0 and none not in water_heater }}"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: !input water_heater
      - choose:
          - conditions: "{{ other_devices_switch is not none and other_devices_switch | length > 0 and none not in other_devices_switch }}"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: !input other_devices_switch
      - choose:
          - conditions: "{{ other_devices_light is not none and other_devices_light | length > 0 and none not in other_devices_light }}"
            sequence:
              - service: light.turn_on
                target:
                  entity_id: !input other_devices_light
